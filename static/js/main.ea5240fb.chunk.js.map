{"version":3,"sources":["components/Totals.js","components/Modal.js","components/useModal.js","components/Person.js","components/Shared.js","components/GroupList.js","App.js","index.js","components/Calculator.js"],"names":["Totals","preTotal","setPreTotal","postTotal","setPostTotal","missingAmount","useState","showBadTotalMessage","setShowBadTotalMessage","showSuggestedTip","setShowSuggestedTip","debouncedPreTotal","setDebouncedPreTotal","suggestedTip","percent","Number","useEffect","timerId","setTimeout","clearTimeout","tipButtons","map","tip","style","position","onClick","toFixed","className","value","onChange","e","target","type","placeholder","readOnly","Modal","isShowing","hide","debouncedSum","setDebouncedSum","setSentFromCalc","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","Calculator","data-dismiss","aria-label","document","body","useModal","setIsShowing","toggle","Person","index","name","people","setPeople","shared","rawSum","setRawSum","owedSum","setOwedSum","sentFromCalc","personName","setPersonName","debouncedName","setDebouncedName","nameTimerId","p","slice","length","raw","showAmount","sum","setSumFunction","pattern","splice","isNaN","Shared","setShared","rawShared","setRawShared","debouncedShared","setDebouncedShared","GroupList","peopleAmount","setPeopleAmount","countPeople","setCountPeople","renderedList","person","t","forEach","total","App","setMissingAmount","render","querySelector","expression","setExpression","finalAmount","setFinalAmount","addToExpression","context","cleanUp","s","handleClick","event","console","log","textContent","border","borderWidth","htmlFor","eval"],"mappings":"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","file":"static/js/main.ea5240fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n//number validation and also have to add in the value field and such\n//add missing value between sum of all people and final/pre\n\nconst Totals = ({ preTotal, setPreTotal, postTotal, setPostTotal, missingAmount }) => {\n  // using a string instead of 0 or null because 0 would require deleting 0 then typing number\n  // null gives us an error because value in <input> shouldn't be null\n  const [showBadTotalMessage, setShowBadTotalMessage] = useState(false);\n  const [showSuggestedTip, setShowSuggestedTip] = useState(false);\n  const [debouncedPreTotal, setDebouncedPreTotal] = useState(preTotal);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedPreTotal(Number(preTotal));\n    }, 500);\n\n    return () => {\n      clearTimeout(timerId)\n    };\n  }, [preTotal]);\n\n  useEffect(() => {\n    if (debouncedPreTotal > 0) {\n      setShowSuggestedTip(true);\n    }\n    else {\n      setShowSuggestedTip(false);\n    }\n  }, [debouncedPreTotal]);\n\n  useEffect(() => {\n    if (preTotal > postTotal) {\n      setShowBadTotalMessage(true);\n    }\n    else {\n      setShowBadTotalMessage(false);\n    }\n  }, [preTotal, postTotal])\n\n  function suggestedTip(percent) {\n    return Number(debouncedPreTotal)*(1+percent);\n  }\n\n  const tips = [.15, .18, .2, .25]\n\n  const tipButtons = tips.map((tip) => {\n    return (\n      <div style={{position: \"relative\"}} onClick={() => {setPostTotal(suggestedTip(tip).toFixed(2)); setShowBadTotalMessage(false)}} className=\"ui mini grey button\">\n        ${suggestedTip(tip).toFixed(2)}\n        <div className=\"floating ui mini blue label\">{tip*100}%</div>\n      </div>\n    )\n  })\n\n  return (\n    <div className=\"ui equal width form\">\n      <div className=\"fields\">\n        <div className=\"field\">\n          <label>Pre Tip and Tax Total</label>\n          <input\n            value={preTotal}\n            onChange={e => setPreTotal(e.target.value)}\n            type=\"number\"\n            placeholder=\"0\"\n          />\n          {showBadTotalMessage ? <div className=\"ui pointing red basic label fluid\">\n            Pre-total must be less than final total\n          </div> : null}\n          {showSuggestedTip ?\n            <div className=\"ui container-fluid\">\n              <div className=\"ui label\">Tips: {tipButtons}</div>\n\n            </div> : null\n          }\n        </div>\n        <div className=\"field\">\n          <label>Final Total</label>\n          <input\n            value={postTotal}\n            onChange={e => setPostTotal(e.target.value)}\n            type=\"number\"\n            placeholder=\"0\"\n          />\n        </div>\n        <div className=\"field\">\n          <label>Missing Amount</label>\n          <input\n            value={missingAmount.toFixed(2)}\n            type=\"number\"\n            readOnly\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Totals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator';\n// https://upmostly.com/tutorials/modal-components-react-custom-hooks\n\nconst Modal = ({ isShowing, hide, debouncedSum, setDebouncedSum, setSentFromCalc }) => isShowing ? ReactDOM.createPortal(\n  <React.Fragment>\n    <div className=\"modal-overlay\" />\n      <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n        <div className=\"modal\">\n          <Calculator\n            setDebouncedSum={setDebouncedSum}\n            debouncedSum={debouncedSum}\n          />\n          <div className=\"modal-header\">\n            <button className=\"ui fluid positive button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => {hide(); setSentFromCalc(true)}}>\n              Submit/Close\n            </button>\n          </div>\n        </div>\n      </div>\n  </React.Fragment>, document.body) : null;\n\nexport default Modal;\n","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle\n  }\n};\n\nexport default useModal;\n","import React, { useState, useEffect } from 'react';\nimport Modal from \"./Modal\";\nimport useModal from './useModal';\nimport './App.css';\n\n//add edit button\n//show calculator: https://medium.com/@nitinpatel_20236/how-to-build-a-simple-calculator-application-with-react-js-bc10a4568bbd\n// add a personName or rename this to PersonRow and make a person file\n//TODO: fix sizing\n\nconst Person = ({ index, name, people, setPeople, preTotal, postTotal, shared }) => {\n  const [rawSum, setRawSum] = useState(\"\");\n  const [owedSum, setOwedSum] = useState(0);\n  const [debouncedSum, setDebouncedSum] = useState(rawSum);\n  const {isShowing, toggle} = useModal();\n  const [sentFromCalc, setSentFromCalc] = useState(false);\n  const [personName, setPersonName] = useState(name);\n  const [debouncedName, setDebouncedName] = useState(personName);\n\n  const removePerson = () => {\n    const p = people.slice();\n    p.splice(index, 1);\n    setPeople(p);\n  };\n\n  useEffect(() => {\n    const nameTimerId = setTimeout(() => {\n      setDebouncedName(personName);\n    }, 500);\n\n    return () => {\n      clearTimeout(nameTimerId)\n    };\n  }, [personName]);\n\n  useEffect(() => {\n    setPersonName(debouncedName);\n    const p = people.slice();\n    p[index].name = personName;\n    setPeople(p);\n  }, [debouncedName]);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedSum(rawSum);\n    }, 500);\n\n    return () => {\n      clearTimeout(timerId)\n    };\n  }, [rawSum]);\n\n  useEffect(() => {\n    if (debouncedSum === 0) {\n      setOwedSum(0);\n    }\n    else {\n      setOwedSum((Number(debouncedSum)+shared/(people.length === 0 ? 1 : people.length))/preTotal*postTotal);\n      const p = people.slice();\n      p[index].raw = Number(debouncedSum);\n      setPeople(p);\n    }\n  }, [debouncedSum, preTotal, postTotal, shared, people.length])\n\n  const showAmount = (sum, setSumFunction) => {\n    return (\n      <td className=\"collapsing\">\n        <div className=\"ui fluid mini action input\">\n          <input\n            type=\"text\"\n            pattern=\"[0-9]*\"\n            value={sum}\n            className=\"ui fluid\"\n            placeholder=\"\"\n            onChange={e => {setSumFunction(e.target.value); setSentFromCalc(false)}}\n          />\n          {/* idk fix this it's not showing the Modal*/}\n            <button onClick={toggle} className=\"ui label button\">\n              <i className=\"calculator icon\"></i>\n            </button>\n            <Modal\n              isShowing={isShowing}\n              hide={toggle}\n              setDebouncedSum={setDebouncedSum}\n              debouncedSum={debouncedSum}\n              setSentFromCalc={setSentFromCalc}\n            />\n        </div>\n      </td>\n    );\n  };\n\n  return (\n    <tr>\n      <td className=\"collapsing\">\n        <div className=\"ui fluid mini labeled input\">\n          <div onClick={removePerson} className=\"ui red icon label button\">\n            <i className=\"trash alternate icon\"></i>\n          </div>\n          <input\n            type=\"text\"\n            value={personName}\n            onChange={e => setPersonName(e.target.value)}\n          />\n        </div>\n      </td>\n      {sentFromCalc ? showAmount(debouncedSum, setRawSum) : showAmount(rawSum, setRawSum)}\n      <td className=\"collapsing\">\n        <div className=\"ui fluid mini input\">\n          <input\n            type=\"number\"\n            value={isNaN(owedSum) ? 0 : owedSum}\n            readOnly\n          />\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default Person;\n","import React, { useState, useEffect } from 'react';\n\nconst Shared = ( { shared, setShared }) => {\n  const [rawShared, setRawShared] = useState(shared.raw);\n  const [debouncedShared, setDebouncedShared] = useState(rawShared);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedShared(Number(rawShared));\n    }, 500);\n\n    return () => {\n      clearTimeout(timerId)\n    };\n  }, [rawShared]);\n\n  useEffect(() => {\n    setShared({name: \"Shared\", raw: debouncedShared})\n  }, [debouncedShared]);\n\n  return (\n    <tbody>\n      <tr>\n        <td>\n          Shared\n        </td>\n        <td className=\"\">\n          <div className=\"ui fluid mini input\">\n            <input\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={rawShared}\n              className=\"ui fluid\"\n              onChange={e => setRawShared(e.target.value)}\n            />\n          </div>\n        </td>\n        <td>\n\n        </td>\n\n      </tr>\n    </tbody>\n  );\n}\n\nexport default Shared\n","import React, { useState, useEffect } from 'react';\nimport Person from './Person';\nimport Shared from './Shared';\n\n//add shared plates\n\nconst GroupList = ({ peopleAmount, setPeopleAmount, preTotal, postTotal }) => {\n  const [shared, setShared] = useState({name: \"Shared\", raw: 0});\n  const [people, setPeople] = useState([])\n  const [countPeople, setCountPeople] = useState(people.length)\n\n  const renderedList = people.map((person, index) => {\n    return (\n      <Person\n        key={index}\n        index={index}\n        setPeople={setPeople}\n        people={people}\n        name={person.name}\n        preTotal={preTotal}\n        postTotal={postTotal}\n        shared={shared.raw}\n      />\n    );\n  });\n\n  useEffect(() => {\n    const total = () => {\n      var t = 0;\n      people.forEach((person) => {\n        t += person.raw;\n      });\n      t += shared.raw;\n      setPeopleAmount(t);\n    }\n    total();\n  }, [people, shared.raw])\n\n  // useEffect(() => {\n  //   console.log(\"countPeople\", shared.raw);\n  // })\n\n  useEffect(() => {\n    setCountPeople(people.length);\n  }, [people.length])\n\n  return (\n    <div>\n      <div className=\"ui container-fluid\">\n        <table className=\"ui compact celled definition unstackable table\">\n          <thead className=\"full-width\">\n            <tr>\n              <th>Person</th>\n              <th>Total</th>\n              <th>Owed</th>\n            </tr>\n          </thead>\n          <Shared shared={shared} setShared={setShared}/>\n          <tbody>\n            {renderedList}\n          </tbody>\n        </table>\n        <div className=\"ui fluid buttons\">\n          <button\n            onClick={() => {setPeople([...people, {name: `Person ${countPeople}`, raw: 0}])}}\n            className=\"ui positive button\"\n            >Add Person\n          </button>\n          {/*<button\n            onClick={() => {setPeople([])}}\n            className=\"ui negative basic button\">\n            Clear\n          </button>*/}\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupList;\n","import React, { useState, useEffect } from 'react';\nimport Totals from './components/Totals';\nimport GroupList from './components/GroupList';\n\nconst App = () => {\n  const [preTotal, setPreTotal] = useState(\"\");\n  const [postTotal, setPostTotal] = useState(\"\");\n  const [missingAmount, setMissingAmount] = useState(0);\n  const [peopleAmount, setPeopleAmount] = useState(0);\n\n  useEffect(() => {\n    setMissingAmount(preTotal-peopleAmount);\n  }, [preTotal, peopleAmount])\n\n  return (\n    <div className=\"ui segment\">\n      <Totals\n        preTotal={preTotal}\n        setPreTotal={setPreTotal}\n        postTotal={postTotal}\n        setPostTotal={setPostTotal}\n        missingAmount={missingAmount}\n      />\n      <GroupList\n        peopleAmount={peopleAmount}\n        setPeopleAmount={setPeopleAmount}\n        preTotal={preTotal}\n        postTotal={postTotal}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector(\"#root\")\n);\n","import React, { useState, useEffect } from 'react';\n\n//https://codepen.io/chris__sev/pen/jZmpwx - format and css\n//eval function: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\n\n\n//TODO: Make text smaller\n// if press submit twice, close out of Modal\n\nconst Calculator = ({ debouncedSum, setDebouncedSum }) => {\n  const [expression, setExpression] = useState(debouncedSum);\n  const [finalAmount, setFinalAmount] = useState(expression);\n\n  function addToExpression(context) {\n    setExpression(expression + context)\n  }\n\n  function cleanUp(s) {\n    if (s[0] === \"0\") {\n      setExpression(1, s.length);\n    }\n  }\n\n  function handleClick(event) {\n    console.log(\"expression\", expression, \"event.target.textContent\", event.target.textContent);\n\n    switch (event.target.textContent) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \"0\":\n      case \"x\":\n      case \"/\":\n      case \"+\":\n      case \"-\":\n      case \".\": {\n        setExpression(`${expression}${event.target.textContent}`);\n        break;\n      }\n    }\n  }\n\n  useEffect(() => {\n    setExpression(finalAmount);\n    setDebouncedSum(finalAmount);\n  }, [finalAmount])\n\n  const border = {\n    border: \"dotted solid\",\n    borderWidth: \"thin\"\n  }\n\n  return (\n    <div className=\"ui container-fluid segment\">\n      <div className=\"ui centered grid\">\n        <div className=\"ui sixteen wide column\">\n          <div className=\"ui right fluid labeled input\">\n            <label htmlFor=\"amount\" className=\"ui label\">$</label>\n            <input\n              type=\"text\"\n              value={expression}\n              readOnly/>\n          </div>\n        </div>\n\n        <div style={border} onClick={() => setExpression(\"\")} className=\"ui center aligned eight wide blue column\">C</div>\n        <div style={border} onClick={() => setExpression(expression.slice(0, expression.length-1))} className=\"ui center aligned four wide column red\">\n            <i className=\"ui icon backward\"></i>\n        </div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column grey\">/</div>\n\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">7</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">8</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">9</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column grey\">*</div>\n\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">4</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">5</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">6</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column grey\">-</div>\n\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">1</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">2</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">3</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column grey\">+</div>\n\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned eight wide column \">0</div>\n        <div style={border} onClick={(e) => setExpression(expression + e.target.textContent)} className=\"ui center aligned four wide column\">.</div>\n        <div\n          style={border}\n          onClick={() => {\n            cleanUp(expression);\n            setFinalAmount(expression === \"\" ? 0 : eval(expression).toFixed(2));\n            setDebouncedSum(finalAmount);\n            }\n          }\n          className=\"ui center aligned four wide column green\">=</div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"sourceRoot":""}